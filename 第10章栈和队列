栈和队列都是动态集合，在其上进行删除操作所移除的元素都是预先设定的。
在栈（stack）中，被删除的最近插入的元素，后进先出（last-in, first-out,LIFO）
在队列（queue）中,被删除的总是在集合中存在时间最长的那个元素，先进先出（first-in,first-out,FIFO）

栈
STACK-EMPTY(S)
  if S.top == 0
    return TRUE
  else
    return FALSE
  
PUSH(S，x)
  S.top = S.top + 1
  S[S.top] = x
  
POP(S)
  if STACK-EMPTY(S)
    error "underflow"
  else
    S.top = S.top - 1
    return S[S.top + 1]
    
队列
  当Q.head = Q.tail时，队列为空。
  初始时有Q.head = Q.tail = 1。
  如果试图从空队列中删除一个元素，则队列发生下溢。
  当Q.head = Q.tail + 1时，队列是满的，此时若试图插入一个元素，则队列发生上溢

ENQUEUE(Q, x)
  Q[Q.tail] = x
  if Q.tail = Q.length
    Q.tail = 1
  else
    Q.tail = Q.tail + 1
    
DEQUEUE(Q)
  x = Q[Q.head]
  if Q.head = Q.length
    Q.head = 1
  else
    Q.head = Q.head + 1
  return x
    
    
    
    
